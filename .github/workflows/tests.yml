env: 
  RUBY_VERSION: 2.7.3
  NODE_VERSION: 14.17.1
  RAILS_ENV: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: pairfinder_test
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  IMAGE_TAG: 0.5.1

name: Rails_tests

on: [push]

jobs: 
  rspec-test:
    name: RSpec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

    steps:   
      - uses: actions/checkout@v2 
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: Install postgres client
        run: sudo apt-get install libpq-dev

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install packages
        run: yarn install --pure-lockfile
      
      - name: Install gems
        run: |
          gem install bundler
          bundle install
        
      - name: Create database
        env:
          RAILS_ENV: test
        run: bundle exec rails db:setup

      - name: Run tests
        run: script/cibuild
        
      - name: Create SK
        run: |
          echo ${{ secrets.RAILS_MASTER_KEY }} >> ./config/master.key
        
      - name: Login to hub.docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push image
        run: script/build_deploy_image
          
      - name: Update deploy scripts
        run: cd script/deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DEPLOY_USER_KEY }}
          source: "./*"
          target: "deploy"
        
      - name: Update docker image and restart containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DEPLOY_USER_KEY }}
          script: deploy/deploy.sh

